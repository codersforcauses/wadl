{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#tech-stack","title":"Tech Stack","text":""},{"location":"#backend","title":"Backend","text":""},{"location":"#frontend","title":"Frontend","text":"<p>Nuxt 3, Vue 3 </p>"},{"location":"components/","title":"Components","text":""},{"location":"components/#why-use-components","title":"Why use Components?","text":"<p>Components improve web development by increasing efficiency and maintainability. They allow for separation of concerns, easier reuse and testing, and promote modular design. Using components results in a more organised, consistent and efficient codebase.</p>"},{"location":"components/#props-and-emits","title":"Props and Emits","text":"<p>Properties (<code>props</code>) are data that is passed from the parent to a child component, while events (<code>emits</code>) are data that are passed from a child component to its parent.</p>"},{"location":"components/#button","title":"Button","text":"<p>What is it?</p> <p>Allows all our buttons to have a consistent style across all pages.</p> <p>Props:</p> <ul> <li><code>buttonText</code></li> <li><code>buttonColor</code> Default: primary</li> <li><code>size</code> Default: large</li> <li><code>textColor</code> Default: text-black</li> <li><code>loading</code> Default: false</li> </ul> <p>How to use it?</p> <pre><code>&lt;Button\n  button-text=\"Reject\"\n  button-color=\"bg-light-red\"\n  text-color=\"text-dark-red\"\n  size=\"small\"\n  :loading=true\n  @click=\"handleClick\"\n/&gt;\n</code></pre> <p>A function that handles the click event</p> <pre><code>const handleClick = () =&gt; { };\n</code></pre>"},{"location":"components/#chip","title":"Chip","text":"<p>What is it?</p> <p>The chip component is utilized within the multi-select component as a compact representation of selected items, featuring an icon for communicating with the parent component when pressed.</p> <p>Props:</p> <ul> <li><code>text</code></li> <li><code>bgColor</code> Default: bg-gold</li> <li><code>textColor</code> Default: text-black</li> <li><code>size</code>Small, Medium - Default, Large</li> </ul> <p>Emits:</p> <ul> <li><code>removeChip</code> Parameters: Chip Text</li> </ul> <p>How to use it?</p> <pre><code>&lt;Chip :text=\"item\" @remove-chip=\"removeChip\" /&gt;\n</code></pre> <p>When the icon on the chip component is clicked, it will pass the text that is displayed on the chip</p> <pre><code>const removeChip = (item) =&gt; { };\n</code></pre>"},{"location":"components/#multi-select","title":"Multi Select","text":"<p>What is it?</p> <p>The component displays a list of items and allows multi-selection, returning the chosen items to the parent.</p> <p>Props:</p> <ul> <li><code>items</code> Default: [ \"Novice\", \"Junior\", \"Senior\" ]</li> <li><code>placeholder</code> Default: Select levels</li> <li><code>selectedChips</code></li> </ul> <p>Emits:</p> <ul> <li><code>change</code> Parameters: Array of Chip text</li> </ul> <p>How to use it?</p> <pre><code>&lt;Multiselect\n  :items=\"['Item 1', 'item 2', 'item 3']\"\n  placeholder=\"Select Items\"\n  @change=\"updateSelectedItems\"\n  /&gt;\n</code></pre> <p>This function displays a list of selected items</p> <pre><code>const updateSelectedItems = (items) =&gt; { };\n</code></pre>"},{"location":"components/#search-select","title":"Search Select","text":"<p>What is it? The component displays a list of items and allows you to search for an items and return it to the parent after selection.</p> <p>Props:</p> <ul> <li><code>items</code></li> <li><code>placeholder</code> Default: School Name</li> <li><code>label</code> Default: School Name</li> <li><code>modelValue</code></li> </ul> <p>Emits:</p> <ul> <li><code>info</code> Parameter: The clicked list item</li> <li><code>update:modelValue</code> Parameter: The typed input</li> </ul> <p>How to use it?</p> <pre><code>&lt;SearchSelect\n  v-model=\"name\"\n  placeholder=\"Select Name\"\n  label=\"List of Names\"\n  :items=\"['Name 1', 'Name 2', 'Name 3']\"\n  @info=\"getInfo\"\n/&gt;\n</code></pre> <pre><code>const info = ref(\"\");\n\nconst getInfo = (item) =&gt; {\n  info.value = item.name;\n};\n</code></pre>"},{"location":"components/#dropdown","title":"Dropdown","text":"<p>What is it? Similiar to the default HTML select element, however styled to match the <code>MultiSelect</code> and <code>SearchSelect</code></p> <p>Props:</p> <ul> <li><code>items</code> Default: [ \"Team Coordinator\" ]</li> <li><code>placeholder</code> Default: Select Role</li> <li><code>label</code> Default: Team Coordinator</li> <li><code>modelValue</code></li> <li><code>color</code></li> <li><code>disabled</code> Default: false</li> </ul> <p>Emits:</p> <ul> <li><code>change</code></li> <li><code>update:modelValue</code> Parameter: The clicked item</li> </ul> <p>How to use it?</p> <pre><code>&lt;Dropdown\n  v-model=\"option\"\n  :items=[\"item1\", \"item 2\"]\n  placeholder=\"Select Item\"\n  color=\"bg-gold\"\n  label=\"My Items\"\n  :disabled=\"true\"\n/&gt;\n</code></pre> <pre><code>const option = ref(\"\");\n</code></pre>"},{"location":"components/#table","title":"Table","text":"<p>What is it?</p> <p>Renders a table based on the header and data passed. A slot can be used for custom columns.</p> <p>Props:</p> <ul> <li><code>headers</code></li> <li><code>data</code></li> <li><code>canEdit</code></li> <li><code>noDataText</code> default: No teams registered</li> </ul> <p>Emits:</p> <ul> <li><code>edit</code> Parameters: editMode, modalVisibility, data</li> </ul> <p>How to use it?</p> <pre><code>const headers = [\n  {\n    key: \"name\",\n    title: \"Venue\",\n  },\n  {\n    key: \"roomNo\",\n    title: \"Room No.\",\n  },\n  {\n    key: \"capacity\",\n    title: \"Capacity\",\n  },\n];\n</code></pre> <p>No custom columns required:</p> <pre><code>&lt;Table\n  :headers=\"headers\"\n  :data=\"filtering ? store.filteredVenues : store.venues\"\n  no-data-text=\"No venues registered\"\n  :loading=\"loading\"\n  @edit=\"handleEdit\"\n/&gt;\n</code></pre> <p>Require custom columns:</p> <pre><code>&lt;Table\n  :headers=\"headers\"\n  :data=\"store.teams\"\n  class=\"mt-5 mx-auto\"\n  :can-edit=\"false\"\n&gt;\n  &lt;template #allocatedTue=\"{ value }\"&gt;\n    &lt;p&gt;\n      &lt;CheckIcon v-if=\"value\" class=\"w-6 h-6\" /&gt;\n      &lt;XMarkIcon v-else class=\"w-6 h-6\" /&gt;\n    &lt;/p&gt;\n  &lt;/template&gt;\n  &lt;template #allocatedWed=\"{ value }\"&gt;\n    &lt;p&gt;\n      &lt;CheckIcon v-if=\"value\" class=\"w-6 h-6\" /&gt;\n      &lt;XMarkIcon v-else class=\"w-6 h-6\" /&gt;\n    &lt;/p&gt;\n  &lt;/template&gt;\n  &lt;template #venuePreference=\"{ value }\"&gt;\n    &lt;p v-for=\"(ven, idx) in value\" :key=\"idx\" class=\"text-xs\"&gt;\n      {{ idx + 1 }}. {{ ven }}\n    &lt;/p&gt;\n  &lt;/template&gt;\n&lt;/Table&gt;\n</code></pre>"},{"location":"components/#search-bar","title":"Search Bar","text":"<p>What is it?</p> <p>The search bar filters the data in a table based on a search term entered into the text input.</p> <p>Emits:</p> <ul> <li><code>handleFilter</code> Parameter: The inputted text</li> </ul> <p>How to use it?</p> <pre><code>&lt;SearchBar @handle-filter=\"handleFilter\" /&gt;\n</code></pre> <p>This function should update the data that passed into the table component</p> <pre><code>const handleFilter = () =&gt; { };\n</code></pre>"},{"location":"components/#tabs","title":"Tabs","text":"<p>What is it?</p> <p>When a tab is clicked it passes the label to the parent so that the relevant information can be displayed.</p> <p>Props:</p> <ul> <li><code>tabs</code></li> <li><code>fontSize</code></li> </ul> <p>Emits:</p> <ul> <li><code>handleTab</code> Parameter: Tab label</li> </ul> <p>How to use it?</p> <pre><code>&lt;Tabs :tabs=\"tabs\" font-size=\"text-xl\" @handle-tab=\"handleTabClicked\" /&gt;\n</code></pre> <p>Setup tab labels and default active state</p> <pre><code>const tabs = [\n  { label: \"Novice\", active: false },\n  { label: \"Junior\", active: true },\n  { label: \"Senior\", active: false },\n];\n</code></pre> <p>A function that is used to get the tab thats been clicked</p> <pre><code>const handleTabClicked = (tab) =&gt; { };\n</code></pre>"},{"location":"components/#notifications","title":"Notifications","text":"<p>What is it? A small popup that display information on a successful or unsuccessful request.</p> <p>Props:</p> <ul> <li><code>modalVisibility</code> Default false</li> <li><code>header</code></li> <li><code>body</code> Default New tournament successfully created</li> <li><code>isSuccess</code> Default false</li> </ul> <p>Emits:</p> <ul> <li><code>close</code></li> </ul> <p>How to use it?</p> <pre><code>const notification = useNotification();\n</code></pre> <pre><code>&lt;Notification\n  :modal-visibility=\"notification.isVisible\"\n  :is-success=\"notification.isSuccess\"\n  :body=\"notification.message\"\n  @close=\"notification.dismiss()\"\n/&gt;\n</code></pre>"},{"location":"components/#form-field","title":"Form Field","text":"<p>What is it?</p> <p>Props:</p> <ul> <li><code>label</code></li> <li><code>modelValue</code></li> <li><code>placeholder</code></li> <li><code>type</code> Default: text</li> <li><code>disabled</code> Default: false</li> <li><code>color</code></li> </ul> <p>Emits:</p> <ul> <li><code>update:modelValue</code> Parameter: Inputted text</li> </ul> <p>How to use it?</p> <pre><code>&lt;FormField\n  v-model=\"email\"\n  label=\"Email\"\n  type=\"email\"\n  placeholder=\"Enter Email\"\n  :color=\"!isValid ? 'border-red-500' : ''\"/&gt;\n</code></pre> <pre><code>const email = ref(\"\");\n</code></pre>"},{"location":"components/#header","title":"Header","text":"<p>What is it?</p> <p>Text that is used to describe the current page</p> <p>Props:</p> <ul> <li><code>titleText</code></li> <li><code>hasLine</code> Default: true</li> </ul> <p>How to use it?</p> <pre><code>&lt;Header title-text=\"Tournaments\" /&gt;\n</code></pre>"},{"location":"components/#modal","title":"Modal","text":"<p>What is it? A modal is a small popup window that displays content on top of the main interface.</p> <p>Props:</p> <ul> <li><code>modalVisibility</code> Default: false</li> <li><code>size</code> Default: w-7/12</li> </ul> <p>Emits:</p> <ul> <li><code>close</code></li> </ul> <p>How to use it?</p> <pre><code>&lt;Modal\n    :modal-visibility=\"modalVisibility\"\n    size=\"w-9/12\"\n    @close=\"\n      () =&gt; {\n        modalVisibility = false;\n      }\n    \"\n  &gt;\n  // Add anything you would like to display in the modal goes here\n  &lt;/Modal&gt;\n</code></pre> <pre><code>const modalVisibility = ref(false);\n</code></pre>"},{"location":"components/#delete-dialog","title":"Delete Dialog","text":"<p>What is it? This Delete Dialog builds upon the modal component, it asks for confirmation before deleting an entry. Its purpose is to prevent accidental deletions. Emits:</p> <ul> <li><code>yes</code></li> <li><code>no</code></li> <li><code>close</code></li> </ul> <p>How to use it?</p> <pre><code>&lt;DeleteDialog\n    :modal-visibility=\"modalVisibility\"\n    @close=\"\n      () =&gt; {\n        modalVisibility = false;\n      }\n    \"\n    @yes=\"\n      () =&gt; {\n        handleSave();\n      }\n    \"\n    @no=\"\n      () =&gt; {\n        handleDelete();\n      }\n    \"\n  /&gt;\n</code></pre> <pre><code>const modalVisibility = ref(false);\n\nconst handleSave = () =&gt; { };\nconst handleDelete = () =&gt; { };\n</code></pre>"},{"location":"components/#loading","title":"Loading","text":"<p>What is it?</p> <p>An SVG that is a animated</p> <p>How to use it?</p> <pre><code>&lt;Loading /&gt;\n</code></pre>"},{"location":"components/#admin-button","title":"Admin Button","text":"<p>What is it?</p> <p>A button that includes an icon that are used on the admin dashboard for page navigation</p> <p>Props:</p> <ul> <li><code>title</code></li> <li><code>link</code></li> <li><code>icon</code></li> </ul> <p>How to use it?</p> <pre><code>&lt;AdminButton\n  title=\"Tournaments\"\n  link=\"admin/tournaments\"\n  :icon=\"TrophyIcon\"\n/&gt;\n</code></pre>"},{"location":"components/#admin-profile-information","title":"Admin Profile Information","text":"<p>What is it?</p> <p>Displays the logged in users full name and role</p> <p>Props:</p> <ul> <li><code>username</code></li> <li><code>role</code></li> </ul> <p>How to use it?</p> <pre><code>&lt;ProfileInfo :username=\"Coders For Causes\" role=\"Admin\" /&gt;\n</code></pre>"},{"location":"components/#home-page-level-button","title":"Home Page Level Button","text":"<p>What is it?</p> <p>A button that display the name of the tournament</p> <p>Props:</p> <ul> <li><code>text</code> Default: tournament</li> </ul> <p>How to use it?</p> <pre><code>&lt;LevelButton :text=\"tournament.shortName\" /&gt;\n</code></pre>"},{"location":"components/#navigation-bar-and-home-button","title":"Navigation Bar and Home Button","text":"<p>What are they?</p> <p>The home button displays the WADL logo on the navigation bar</p> <p>How to use it?</p> <pre><code>&lt;NavBar /&gt;\n</code></pre>"},{"location":"installation-guide/","title":"Installation Guide","text":""},{"location":"installation-guide/#run-documentation","title":"Run Documentation","text":"<p><code>mkdocs serve</code></p>"},{"location":"installation-guide/#run-emulator-and-development-server","title":"Run Emulator and Development Server","text":"<p>Requires java SDK and firebase-tools installed globally</p>"},{"location":"installation-guide/#mac-setup","title":"Mac Setup","text":"<pre><code>yarn dev:emu\n</code></pre>"},{"location":"installation-guide/#windows-setup","title":"Windows Setup","text":"<pre><code>yarn firebase\n</code></pre> <p>and in a separate terminal</p> <pre><code>yarn dev\n</code></pre> <p>OR</p> <pre><code>yarn dev:docker\n</code></pre> <p>Requires docker and you will need to authenticate your firebase account while the container briefly is put into sleep mode</p>"},{"location":"tournament-setup/","title":"Tournament Setup","text":""},{"location":"tournament-setup/#create-tournament","title":"Create Tournament","text":"<p>To create a new tournament, go to the admin dashboard and find the tournaments section. You'll need to create a new tournament before opening registrations, where you can input the following details:</p> <ul> <li>Tournament Name</li> <li>Tournament Short Name</li> <li>Levels (Novice, Junior, Senior)</li> <li>Number of Non-preliminary Rounds</li> </ul> <p>When a tournament is created it will automatically set registrations to opened.</p>"},{"location":"tournament-setup/#setup-venues","title":"Setup Venues","text":"<p>Venues must be added on <code>admin/venues</code> so that they can be added to the <code>manage tournament</code> page</p>"},{"location":"tournament-setup/#manage-tournament","title":"Manage Tournament","text":"<p>To access a list of tournaments, go to the admin dashboard and navigate to the tournaments. Click on the tournament row you're interested in to view its management dashboard. Here, you can set up your round dates, venues, and divisions, as well as view all the relevant details related to the tournament.</p>"},{"location":"tournament-setup/#viewing-registered-teams","title":"Viewing Registered Teams","text":"<p>You will be able to view all registered teams for the a level by clicking <code>teams</code></p>"},{"location":"tournament-setup/#managing-level-divisions","title":"Managing Level Divisions","text":"<p>You will be navigated to a <code>Manage Divisions</code> page where you can add new divisions to a level and assign the teams based on venue preferences. This could be done after adding venues to the tournament</p>"},{"location":"tournament-setup/#view-level-draw","title":"View Level Draw","text":"<p><code>Coming soon</code> - A page that displays a list of debates after fixtures have been generated.</p>"},{"location":"tournament-setup/#adding-venues","title":"Adding Venues","text":"<p>Adding venues to your tournament is crucial in order to properly assign teams to divisions based on their venue preferences. To add venues, simply click the plus icon and choose the week and day for which you want to add a venue. You can select multiple venues for that specific time slot. Keep in mind that if the week and/or day is different, you will have to create a new venue.</p>"},{"location":"tournament-setup/#adding-round-dates","title":"Adding Round Dates","text":"<p>To add dates for a round, simply click on the plus icon and type the specific round you wish to add dates for. Each round should be added separately, and you can specify the following dates for each round:</p> <ul> <li>Tuesday Week 1</li> <li>Tuesday Week 2</li> <li>Wednesday Week 1</li> <li>Wednesday Week 2</li> </ul>"},{"location":"tournament-setup/#tournament-status","title":"Tournament Status","text":"<p>Clicking on <code>Previous Stage</code> or <code>Next Stage</code> will change the status.</p> <ul> <li><code>Open</code> - Registration is opened and teams can register</li> <li><code>Closed</code> - Registration is closed and teams cannot be registered</li> <li><code>Running</code> - Fixtures have been generated and is ready for the public to view</li> <li><code>Complete</code> - Tournament has been completed and no longer displays to the public</li> </ul>"},{"location":"tournament-setup/#features-coming-soon","title":"Features Coming Soon","text":"<ul> <li>Generate Fixtures</li> <li>Advance the current round</li> <li>Release Results for the current round</li> </ul>"},{"location":"user-guide/","title":"Team Coordinator Guide","text":"<p>The WADL Application is currently <code>in development</code> and the released version is in beta stage, which may result in unexpected bugs. If you encounter any issues while using the application, please don't hesitate to reach out to the WADL staff for assistance. Your feedback is also highly appreciated as we work to improve the application. Over the next few months, new features will be added to enhance your experience.</p> <p>View the WADL Website</p>"},{"location":"user-guide/#creating-a-team-coordinator-account","title":"Creating a Team Coordinator Account","text":"<p>To create a user account, simply follow the registration process. Once you have completed the necessary information, your account will be pending approval by an administrator. Please allow up to <code>1-3 business days</code> for approval. Note that you will not receive any notification once your account has been approved. This feature is under development.</p>"},{"location":"user-guide/#setting-up-your-institution","title":"Setting Up Your Institution","text":"<p>Before registering your teams for a tournament, you'll need to create a <code>School Profile</code>. If there are multiple team coordinators, this profile may have already been created. You can select your school profile from the school name dropdown menu, or create a new profile by typing the school name and filling in the rest of the information. To link your account with the school profile, make sure to submit any changes you make.</p> <p>Information required:</p> <ol> <li><code>School Name</code>: A name that represents your school</li> <li><code>School Name Abbreviation</code>: A short name that represents your school</li> <li><code>School Email</code>: A contact email for WADL staff</li> <li><code>School Phone Number</code>: A phone number for WADL staff</li> </ol> <p>Once your school profile has been created, you'll have access to the <code>Team Registration</code> button in the navigation dropdown menu and the <code>Teams</code> page.</p>"},{"location":"user-guide/#team-registration","title":"Team Registration","text":"<p>It is advised that you only use one team coordinator to register your teams in order to prevent duplications. Upon completion, all team coordinators associated with the same institution will be able to view the registered teams on the <code>Teams</code> page.</p> <p>Additionally, you'll have the option to edit preferences for each team individually and even add more teams after your initial registration, providing you with a flexible and organized system for managing your teams.</p> <p>Information required:</p> <ol> <li><code>Tournament Name</code>: A list of tournament that are currently open for registration will be displayed in a dropdown menu</li> <li><code>Level</code>: Select the levels you want to participate in (Novice, Junior, Senior)</li> <li><code>Number of Teams</code>: Indicate the total number of teams for each level</li> <li><code>Week Preference</code>: Specify which week you would prefer to compete in (Week 1, Week 2, Either) for each level.</li> <li><code>Tuesday Allocation</code>: Choose the number of teams you would like to compete on a Tuesday for each level</li> <li><code>Wednesday Allocation</code>: Choose the number of teams you would like to compete on a Wednesday for each level. Note: You can allocate teams for both Tuesday and Wednesday.</li> <li><code>Venue Preferences</code>: Provide your top 3 venue preferences or indicate if you have no preference</li> <li><code>Notes</code>: Any additional notes you might like to include for WADL staff</li> </ol>"},{"location":"user-guide/#features-coming-soon","title":"Features Coming Soon","text":"<ol> <li>Change personal information and password</li> <li>View the division that has been assigned to all your teams</li> <li>Ability to remove a team from registration</li> <li>View team debate matchups</li> <li>Ability to postpone debate and forfeit</li> <li>Email notifications on account approval and possibly other situations</li> </ol>"}]}